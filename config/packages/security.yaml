security:
    # Configurez les hashers de mot de passe
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    # Fournisseur d'utilisateurs
    providers:
        users_in_database:
            entity:
                class: App\Entity\User
                property: username  # Ici, nous utilisons `username` au lieu de `email`

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            lazy: true
            provider: users_in_database
            custom_authenticator: App\Security\LoginUserAuthenticator  # Assurez-vous que l'authentificateur est correct

            logout:
                path: app_logout
                target: /
                # where to redirect after logout
                # target: app_any_route

            remember_me:
                secret: '%kernel.secret%'
                lifetime: 604800
                path: /

    # Contrôles d'accès
    access_control:
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/user, roles: ROLE_ADMIN }
        - { path: ^/topic, roles: ROLE_ADMIN }
        - { path: ^/show, roles: ROLE_USER }
        - { path: ^/language, roles: ROLE_ADMIN }
        - { path: ^/profile, roles: ROLE_USER }
        - { path: ^/banned, roles: ROLE_BANNED }

    role_hierarchy:
        ROLE_SUPER_ADMIN: ROLE_ADMIN
        ROLE_ADMIN: ROLE_USER
        ROLE_BANNED:

# Configuration pour l'environnement de test
when@test:
    security:
        password_hashers:
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4
                time_cost: 3
                memory_cost: 10
